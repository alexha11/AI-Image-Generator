import React, {useState} from 'react';
import { useNavigate } from 'react-router-dom';
import { preview } from '../assets';
import { getRandomPrompt } from '../utils';
import { FormField, Loader } from '../components';

const CreatePost = () => {
  const navigate = useNavigate();
  const [form, setForm] = useState({
    name: '',
    prompt: '',
    photo: '',
  });

  const [generatingText, setGeneratingText] = useState(false);
  const [loading, setLoading] = useState(false);

  const generateImage = async () => {
    if (form.prompt) {
      try {
        setGeneratingText(true);
        const response = await fetch('http://localhost:8080/api/v1/dalle', {
        
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ prompt: form.prompt}),
        });
        const data = await response.json();
        console.log(data);
        setForm({ ...form, photo:  'data:image/jpeg;base64,' + data.photo });
        setGeneratingText(false);
      } catch (error) {
        console.log(error);
    }
    finally {
      setGeneratingText(false);
    }
    } else {
      alert('Please enter a prompt');
    }
  }

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);

  
    setLoading(false);
    navigate('/');
  }

  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });


  const handleGenerateText =  () => {
    const randomPrompt =  getRandomPrompt(form.prompt);
    setForm({ ...form, prompt: randomPrompt });
  }

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">Create </h1>
        <p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">Create imaginative and visually stunning images generated by DALL-E AI and share them with the community</p>
      </div> 
      <form className='mt-16 max-w-3xl' onSubmit={handleSubmit}>
        <div className='flex flex-col gap-5'>
          <FormField
              LabelName='Your name'
              type='text'
              name='name'
              placeholder='Ex., Duong'
              value={form.name}
              handleChange={handleChange}
              />

          <FormField
            LabelName='Prompt'
            type='text'
            name='prompt'
            placeholder='Enter your name'
            value={form.prompt}
            handleChange={handleChange}
            isSupriseMe={true}
            handleGenerating={handleGenerateText}
          />
          <div className="relative bg-gray-50 border border-gray-300 text-gray-900 text-sm  rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center">
            {form.photo ? (
              <img src={form.photo} alt={form.prompt} className="w-full h-full object-contain" />
            ) : (
              <img src={preview} alt='preview' className="w-9/12 h-9/12 object-contain opacity-40" />
              )}
            {generatingText && (
              <div className='absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg '>
                <Loader/>
              </div>
            )}
          </div>
        </div>
        <div className='mt-5 flex gap-5'> 
            <button
            type='button'
            onClick={generateImage}
            className='text-white bg-green-700 font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center'
            >
              {generatingText ? 'Generating...' : 'Generate'}
            </button>
        </div>
        <div className='mt-10'>
          <p className='mt-2 text-[#666e75] text-[14px]'>Once you have created the image you want, you can share it to the community</p>
          <button
            type='submit'
            className='text-white bg-[#6469ff] font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center mt-5'>
              {loading ? 'Sharing...' : 'Share with the community'}
            </button>
        </div>
        
        
      </form>
    </section>
  );
} 

export default CreatePost;