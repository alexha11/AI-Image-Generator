name: Deploy Server Application 

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Ensure this matches your Node.js version

      - name: Install Dependencies
        run: npm install
        working-directory: ./server  # Change if your package.json is in a different directory

      - name: Run ESLint
        run: npm run lint
        working-directory: ./server

      # Run Tests
      - name: Run Tests
        env:
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }} 
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          SECRET: ${{ secrets.SECRET }}
          SEARCH_API_KEY: ${{ secrets.SEARCH_API_KEY }}
          PORT: ${{ secrets.PORT }}
        run: npm run test
        working-directory: ./server  # Adjust to your test command and directory

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t duongha11/serveraigenerator -f server/Dockerfile server

      - name: Push Docker Image
        run: docker push duongha11/serveraigenerator:latest 

  deploy: 
    needs: build
    runs-on: self-hosted
    steps: 
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Clean up Docker
        run: |
          docker container prune -f
          docker image prune -f
          docker volume prune -f

      - name: Pull Image from Docker Hub
        run: docker pull duongha11/serveraigenerator:latest

      - name: Delete Old Container
        run: docker rm -f server-app-container || true

      - name: Run Container with Environment Variables
        run: |
          docker run -d -p 4000:4000 --name server-app-container \
            -e MONGODB_URI_DEV='${{ secrets.MONGODB_URI_DEV }}' \
            -e TEST_MONGODB_URI='${{ secrets.TEST_MONGODB_URI }}' \
            -e OPENAI_API_KEY='${{ secrets.OPENAI_API_KEY }}' \
            -e PORT='${{ secrets.PORT }}' \
            -e CLOUDINARY_CLOUD_NAME='${{ secrets.CLOUDINARY_CLOUD_NAME }}' \
            -e CLOUDINARY_API_KEY='${{ secrets.CLOUDINARY_API_KEY }}' \
            -e CLOUDINARY_API_SECRET='${{ secrets.CLOUDINARY_API_SECRET }}' \
            -e SECRET='${{ secrets.SECRET }}' \
            -e SEARCH_API_KEY='${{ secrets.SEARCH_API_KEY }}' \
            duongha11/serveraigenerator:latest
